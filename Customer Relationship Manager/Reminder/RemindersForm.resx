<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imlTab.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imlTab.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAD8
        CAAAAk1TRnQBSQFMAgEBAgEAASgBAAEoAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABECYAAwMBBAMHAQkDCwEPMAADBAEFAw8BFAMZASMDIgExAzMBUgNGAX8BXAFh
        AWIBwAM9AWeoAAM4AV0DiwHsAyoBQAMJAQwDAQECGAADKQE/AVUCWAGtAVgBXQFfAbkBXgFkAWYBxgFj
        AXEBdgHVAWwBhAGMAeMBdgGaAaUB7wGHAbIBwwH3AZYBwgHYAf0BkgHQAegB/wNMAZCkAAM9AWgDuwH9
        A8gB/wOdAfIDDQERAwABARgAA0ABcAGrAdUB4gH/AcIB2AHcAf8BxgHYAdsB/wHMAdgB2gH/AdIB2QHY
        Af8B1wHaAdcB/wHbAdoB1gH/AecB3AHSAf8BrgHWAeIB/wNMAZCcAAMiATIDSgGMA8cB/wHQAc8BzgH/
        A7cB+gNqAdADEgEZHAADPQFnAcsB2wHdAf8B7wHgAdUB/wHoAd4B1gH/AecB3gHWAf8B5gHeAdcB/wHk
        Ad4B1wH/AeMB3gHXAf8B6wHfAdYB/wGvAdcB5AH/A0wBkJQAAw8BFAMfASwCXQFfAcEDvwH/Aa0BqwGo
        Af8BaQF0AYMB5AMMARAkAAM8AWYBxwHdAeAB/wHqAeIB2wH/AeQB4QHcAf8B5AHhAdwB/wHkAeEB3AH/
        AeQB4QHcAf8B5QHhAdwB/wHtAeIB2wH/Aa8B2QHlAf8DTAGQlAABUAFYAWgBzQEPAUYBxQH/AbUBugHG
        Af8BywHJAcQB/wHGAcQBvgH/AlUBVwGuAwcBChgAAxQBHAM2AVgEAAM8AWYBygHfAeMB/wHuAeUB3gH/
        AegB5AHfAf8B5wHjAd8B/wHrAegB4wH/AfEB6gHjAf8B6QHlAd8B/wHvAeUB3gH/AbEB2wHoAf8DTAGQ
        kAADCwEPATcBVQGgAfEBDQFEAcUB/wEEATcBuwH/ATUBXAHBAf8BiQGbAcoB/wFeAYIBwgH/AWYBbAF9
        AeYCUQFQAZsDQgF1AzYBWQM2AVkDRAF5A1YBsAKbAZMB9gFiAXkBoQH2BAADOwFlAcwB4gHmAf8B8QHp
        AeIB/wHqAecB4wH/AfEB7gHpAf8CygHHAf8BvAHFAc8B/wHuAewB6AH/AfcB7QHiAf8BsQHcAeoB/wNM
        AZCQAAMtAUUBHAFWAc0B/QE3AYgB+AH/ASwBeAHvAf8BGQFeAdoB/wEIAUIBxAH/AQABNAG/Af8BgAGS
        AbUB/wG4AbkBuAH/AbsBugG4Af8BugG7AbgB/wK6AbgB/wK5AbYB/wK3AbUB/wHAAb4BtAH/AWYBhQGr
        AfcEAAM7AWQBzQHkAekB/wH0AewB5wH/Ae0B6wHnAf8B8AHtAekB/wHnAeUB4QH/AZIBuQHpAf8BdgGq
        AeoB/wHzAewB5QH/AboB4wHsAf8DTAGQlAADQgF0ASYBbAHgAf8BKQFzAegB/wEyAYIB8gH/ATgBiQH5
        Af8BKgFvAeQB/wLBAb4B/wG/AcABvgH/Ab0BvgG7Af8CvgG8Af8CvQG7Af8CvAG6Af8BvgG/AbsB/wHG
        AcQBugH/AVYBbAGUAewEAAM7AWMBzwHmAewB/wH3AfAB6wH/AfAB7gHrAf8B8AHuAesB/wH3AfIB7AH/
        AdEB3AHqAf8BcQGrAe4B/wGFAa0B6QH/AbMB4QHsAf8DTAGQmAADKQE+AUgCSQGIAVYBXQFuAc8BJwFh
        AckB+wFmAZEBzwH/AfAB7QHkAf8B3wHgAd0B/wLRAc8B/wHFAcYBwwH/AcUBxgHCAf8CywHHAf8CzQHI
        Af8BxwHJAcMB/wFTAV0BdAHXBAADOwFjAdAB6QHvAf8B+gHzAe8B/wHzAfEB7wH/AfMB8QHvAf8B8gHx
        Ae8B/wH9AfcB7gH/AdMB3gHsAf8BdgGsAe0B/wFlAawB7AH/A0gBhqQAAxoBJQNEAXoDfQHfAegB5wHm
        Af8C6AHnAf8C4QHgAf8C2AHWAf8C2AHUAf8BzwHQAcwB/wGzAb8BzwH/AVABUwFVAagEAAM6AWIB0gHr
        AfEB/wH9AfYB8gH/AfYB9AHyAf8B9gH0AfIB/wH2AfQB8gH/AfUB8wHyAv8B+wHzAf8B0QHeAe4B/wGE
        Aa8B7QH/AVcBWgFfAboDAAEBqAADAQECAz0BaAPLAfoD6wH/AukB6AH/At8B3QH/AdkB2AHVAf8BhgGl
        AdgB/wMuAUcEAAM6AWEB1wHuAfQC/wH8AfgB/wH6AfkB+AH/AfoB+QH4Af8B+wH6AfkB/wL8AfsB/wL9
        AfwD/wH5Af8BsAHWAe0B/wGBAbIB7gH/AVIBVQFWAamwAAMcAScDdwHZA+8B/wPsAf8B7gHqAeIB/wFY
        AWUBfQHdAwMBBAQAAz0BaAHEAewB9gH/Ae4C8QH/AfIB8AHvAf8B8QLwAf8B7gLtAf8D6gH/AeMC4gH/
        Ae4B8QHwAf8BuwHvAfgB/wFjAXABeQHZAZwBuAHgAf8BVQJUAaYDBwEJrAADGgEkA3YB1gPvAf8BvAHO
        AegB/wFFAkYBfwgAAyMBMwNRAZ8BZgJpAcwB6gLmAf8D5QH/AtEB0gH/Ab4BvwHAAf8BrAKoAf8BZgFv
        AXAB1wFgAWoBbAHNAzsBYwM3AVsBgwGAAbEB/wMyAVGwAAMdASkB5gHkAeAB/gFWAWkBiQHjAw8BFBAA
        AwMBBAMzAVMDmAHoAtcB2AH/A1YBqwM0AVQDCAELAwMBBAMCAQMEAAMmATgDCgEOtAADTgGUAxsBJhwA
        AzsBYwNoAcsDBwEKoAABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEAAfgB/wHw
        AQ8EAAH8AR8BgAEPBAAB+AEfAYABDwQAAeABPwGAAQ8EAAGAAf8BgAEPBAABgAH8AYABDwYAAYABDwYA
        AYABDwQAAYABAAGAAQ8EAAHAAQABgAEPBAAB+AEAAYABBwQAAf4BAAGAAQcEAAH/AoABAQQAAf8BwQGA
        AQEEAAH/AeEB4AEJBAAB/wHzAfgB/wQACw==
</value>
  </data>
</root>